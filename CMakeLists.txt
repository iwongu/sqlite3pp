# vim: set ts=4 sw=4 sts=4 et:

PROJECT (sqlite3pp)
CMAKE_MINIMUM_REQUIRED (VERSION 2.8)

SET (SQLITE3PP_MAJOR 1)
SET (SQLITE3PP_MINOR 0)
SET (SQLITE3PP_MICRO 1)

OPTION (ENABLE_SQLCIPHER "Enable building with sqlcipher")
OPTION (ENABLE_TESTS "Enable building tests" ON)
OPTION (ENABLE_SO_VERSION "Enable shared library version" ON)
OPTION (LIB_SUFFIX "Installation library directory suffix")

IF (LIB_SUFFIX)
    SET (INSTALL_LIBDIR lib${LIB_SUFFIX})
ELSEIF (LIB_SUFFIX STREQUAL "" OR NOT CMAKE_VERSION OR CMAKE_VERSION VERSION_LESS "2.8.5")
    SET (INSTALL_LIBDIR lib)
ELSE (LIB_SUFFIX STREQUAL "" OR NOT CMAKE_VERSION OR CMAKE_VERSION VERSION_LESS "2.8.5")
    INCLUDE (GNUInstallDirs)
    SET(INSTALL_LIBDIR ${CMAKE_INSTALL_LIBDIR})
ENDIF(LIB_SUFFIX)

IF (ENABLE_SQLCIPHER)
    ADD_DEFINITIONS (-DHAVE_SQLCIPHER=1 -DSQLITE_HAS_CODEC)
    SET (SQLITE3PP_NAME sqlcipherpp)
    SET (SQLITE3 sqlcipher)
ELSE (ENABLE_SQLCIPHER)
    SET (SQLITE3PP_NAME sqlite3pp)
    SET (SQLITE3 sqlite3)
ENDIF (ENABLE_SQLCIPHER)

INCLUDE_DIRECTORIES ($ENV{BOOST_ROOT})

IF (CMAKE_COMPILER_IS_GNUCC)
    INCLUDE (CheckCXXCompilerFlag)

    SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")

    CHECK_CXX_COMPILER_FLAG (-fvisibility=hidden HAVE_GCC_VISIBILITY)
    IF (HAVE_GCC_VISIBILITY)
        SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden")
    ENDIF (HAVE_GCC_VISIBILITY)
ENDIF (CMAKE_COMPILER_IS_GNUCC)

ADD_SUBDIRECTORY (src)

IF (ENABLE_TESTS)
    ADD_SUBDIRECTORY (tests)
ENDIF (ENABLE_TESTS)
